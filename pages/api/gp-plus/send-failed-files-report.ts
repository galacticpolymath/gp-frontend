import { NextApiRequest, NextApiResponse } from "next";
import { getJwtPayloadPromise } from "../../../nondependencyFns";
import { sendEmailWithRetries } from "../../../backend/services/emailServices";
import { CustomError } from "../../../backend/utils/errors";
import { TFileToCopy } from "../../../backend/services/gdriveServices/types";

interface FailedFilesReportRequest {
  failedFiles: TFileToCopy[];
  timestamp: string;
  userAgent: string;
}

export default async function handler(
  request: NextApiRequest,
  response: NextApiResponse
) {
  if (request.method !== "POST") {
    return response.status(405).json({ message: "Method not allowed" });
  }

  try {
    // Verify user authentication
    const jwtPayload = await getJwtPayloadPromise(
      request.headers.authorization
    );

    if (!jwtPayload) {
      throw new CustomError("Unauthorized. Please log in again.", 401);
    }

    const { failedFiles, timestamp, userAgent }: FailedFilesReportRequest =
      request.body;

    if (
      !failedFiles ||
      !Array.isArray(failedFiles) ||
      failedFiles.length === 0
    ) {
      throw new CustomError("No failed files provided", 400);
    }

    const userEmail = jwtPayload.payload.email;
    const userName = jwtPayload.payload.name || "User";

    // Create email content
    const fileListHtml = failedFiles
      .map(
        (file, index) => `
        <tr>
          <td>${index + 1}</td>
          <td>${file.name}</td>
          <td>${file.id || "Unknown"}</td>
        </tr>
      `
      )
      .join("");

    const emailHtml = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #dc3545;">Failed File Copy Report</h2>
        
        <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px;">
          <h3 style="margin-top: 0; color: #495057;">Report Details</h3>
          <p><strong>User:</strong> ${userName} (${userEmail})</p>
          <p><strong>Report Time:</strong> ${new Date(
            timestamp
          ).toLocaleString()}</p>
          <p><strong>User Agent:</strong> ${userAgent}</p>
          <p><strong>Number of Failed Files:</strong> ${failedFiles.length}</p>
        </div>

        <h3 style="color: #495057;">Failed Files List</h3>
        <table style="width: 100%; border-collapse: collapse; margin-bottom: 20px;">
          <thead>
            <tr style="background-color: #e9ecef;">
              <th style="border: 1px solid #dee2e6; padding: 8px; text-align: left;">#</th>
              <th style="border: 1px solid #dee2e6; padding: 8px; text-align: left;">File Name</th>
              <th style="border: 1px solid #dee2e6; padding: 8px; text-align: left;">File ID</th>
            </tr>
          </thead>
          <tbody>
            ${fileListHtml}
          </tbody>
        </table>

        <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px;">
          <h4 style="margin-top: 0; color: #856404;">Action Required</h4>
          <p style="margin-bottom: 0; color: #856404;">
            Please investigate why these files failed to copy and help the user resolve the issue.
            Common causes include permission problems, file size limits, or temporary Google Drive issues.
          </p>
        </div>

        <hr style="margin: 20px 0; border: none; border-top: 1px solid #dee2e6;">
        
        <p style="color: #6c757d; font-size: 12px;">
          This report was automatically generated by the GP+ lesson copying system.
        </p>
      </div>
    `;

    const emailText = `
Failed File Copy Report

User: ${userName} (${userEmail})
Report Time: ${new Date(timestamp).toLocaleString()}
User Agent: ${userAgent}
Number of Failed Files: ${failedFiles.length}

Failed Files:
${failedFiles
  .map(
    (file, index) => `${index + 1}. ${file.name} (ID: ${file.id || "Unknown"})`
  )
  .join("\n")}

Action Required:
Please investigate why these files failed to copy and help the user resolve the issue.
Common causes include permission problems, file size limits, or temporary Google Drive issues.

This report was automatically generated by the GP+ lesson copying system.
    `;

    // Send email to support team
    const emailResult = await sendEmailWithRetries({
      from: "shared@galacticpolymath.com",
      to: "shared@galacticpolymath.com", // Update with actual support email
      subject: `GP+ Failed File Copy Report - ${userName} (${failedFiles.length} files)`,
      text: emailText,
      html: emailHtml,
    });

    if (!emailResult.wasSuccessful) {
      throw new CustomError("Failed to send email report", 500);
    }

    // Also send a copy to the user for their records
    const userEmailResult = await sendEmailWithRetries({
      from: "shared@galacticpolymath.com",
      to: userEmail,
      subject: `GP+ File Copy Report - ${failedFiles.length} files failed`,
      text: `
Hello ${userName},

This is a confirmation that we have received your report about ${
        failedFiles.length
      } files that failed to copy during your GP+ lesson copying process.

Failed Files:
${failedFiles.map((file, index) => `${index + 1}. ${file.name}`).join("\n")}

Our support team has been notified and will investigate the issue. We'll get back to you as soon as possible to help resolve this.

Thank you for using GP+!

Best regards,
The Galactic Polymath Team
      `,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #007bff;">GP+ File Copy Report Confirmation</h2>
          
          <p>Hello ${userName},</p>
          
          <p>This is a confirmation that we have received your report about <strong>${
            failedFiles.length
          } files</strong> that failed to copy during your GP+ lesson copying process.</p>
          
          <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0;">
            <h3 style="margin-top: 0;">Failed Files:</h3>
            <ul>
              ${failedFiles.map((file) => `<li>${file.name}</li>`).join("")}
            </ul>
          </div>
          
          <p>Our support team has been notified and will investigate the issue. We'll get back to you as soon as possible to help resolve this.</p>
          
          <p>Thank you for using GP+!</p>
          
          <p>Best regards,<br>The Galactic Polymath Team</p>
        </div>
      `,
    });

    console.log("Failed files report sent successfully for user:", userEmail);
    console.log("User email confirmation sent:", userEmailResult.wasSuccessful);

    response.status(200).json({
      wasSuccessful: true,
      message: "Report sent successfully",
    });
  } catch (error: any) {
    console.error("Error sending failed files report: ", error);

    const { message, code } = error ?? {};

    response.status(code || 500).json({
      wasSuccessful: false,
      message: message || "Failed to send report",
    });
  }
}
