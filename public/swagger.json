{
  "openapi": "3.0.0",
  "info": {
    "title": "NextJS Swagger",
    "version": "0.1.0"
  },
  "paths": {
    "/api/copy-files": {
      "post": {
        "summary": "Copy all files from one folder to another",
        "description": "Copies all files from one folder to another. The client must be authenticated as a GP user and with their google account to use this endpoint.",
        "security": [
          {
            "userAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The JWT token of the user for the site.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "GDrive-Token",
            "description": "The JWT token of the user's google account.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a message indicating whether or not the file copy operation was successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "True if the file copy operation was successful, false otherwise."
                    },
                    "message": {
                      "type": "string",
                      "description": "A message indicating the result of the file copy operation."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "type": "string",
                      "description": "A message describing the error"
                    },
                    "errType": {
                      "type": "string",
                      "enum": [
                        "dbConnectionErr"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/get-users": {
      "get": {
        "summary": "Retrieve all users from the database with their mailing list status",
        "description": "Retrieves all users from the db along with their mailing list status. The client must be authenticated as a database administrator to use this endpoint. Will hit the brevo api. If a 429 error is encountered, then it will retry up to 7 times.",
        "security": [
          {
            "dbAdminAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dbType",
            "schema": {
              "type": "string",
              "enum": [
                "dev",
                "production"
              ]
            },
            "required": false,
            "description": "The type of database to query"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "The JWT token of the user for the site. The user must be authenticated as a database administrator to use this endpoint.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of all users from the db along with their mailing list status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mailingListStatus": {
                            "type": "string",
                            "enum": [
                              "onList",
                              "notOnList",
                              "doubleOptEmailSent"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errMsg": {
                      "type": "string",
                      "description": "A message describing the error"
                    },
                    "errType": {
                      "type": "string",
                      "enum": [
                        "dbConnectionErr",
                        "userRetrievalErr",
                        "maxTriesExceeded"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {

  },
  "tags": []
}